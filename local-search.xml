<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>后台环境配置</title>
    <link href="/2021/07/30/%E5%90%8E%E5%8F%B0%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <url>/2021/07/30/%E5%90%8E%E5%8F%B0%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<p>这篇文档是我对后端一个入门的学习，主要是搭建一些环境和框架。不涉及什么原理性的知识。是对自己的知识领域的一个扩充。</p><h2 id="安装Java"><a href="#安装Java" class="headerlink" title="安装Java"></a>安装Java</h2><p>这台电脑连Java都没有安装，首先要安装java。因为都是一些常规的操作，就简略一点的写。就选自己的电脑系统对应版本，大部分人都是windows 64版本。装linux肯定懂得都懂了。<br><img src="/img/backEndEnvironment/h-1.png" alt="配置图片"><br>之后就按正常的流程安装，和windows装其他软件大体上没什么不同。注意不要有中文目录，安装目录的文件夹必须为空，在安装前新建一个就好了。<br>之后就是万众期待的配置环境变量了。首先windows的我的电脑属性中，界面的样式变了，这个功能微软把这个界面统一都放到了设置中。<br><img src="/img/backEndEnvironment/h-2.png" alt="配置图片"><br>现在是点击右侧的高级系统设置，之后其中找到环境变量的项目。<br><img src="/img/backEndEnvironment/h-3.png" alt="配置图片"><br>选择系统变量，点击新建，输入变量名JAVA_HOME，变量值为JDK的目录所在路径。举个例如的D:\Java\jdk1.8.0_281。如图：<br><img src="/img/backEndEnvironment/h-4.png" alt="配置图片"><br>选择系统变量，找到Path变量，点击编辑，点击新建，输入%JAVA_HOME%\bin，点击确定。之后在cmd中输入javac不报一些没找到就可以了。</p><h2 id="配置数据库mysql"><a href="#配置数据库mysql" class="headerlink" title="配置数据库mysql"></a>配置数据库mysql</h2><p>首先去官网下载mysql的版本，这里还是有点麻烦的，下载要输入账号。这里下载的是解压版的，安装版的暂时只找到了32位的，和64位的配合不是很好。<br><img src="/img/backEndEnvironment/h-5.png" alt="配置图片"><br>下载之后继续解压到你想要安装的目录，之后还要继续配置环境变量。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-string">MYSQL_HOME：D:\Program</span> <span class="hljs-string">Files\mysql-8.0.26-winx64</span><br><span class="hljs-string">path：%MYSQL_HOME%\bin;</span><br></code></pre></td></tr></table></figure><p>具体的打开方法上面配置java的时候有说，这里就不再详细介绍了。<br>最开始mysql的目录是没有my.ini,需要自己创建之后填写以下内容：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs yml">[<span class="hljs-string">mysql</span>]<br><span class="hljs-comment"># 设置mysql客户端默认字符集</span><br><span class="hljs-string">default-character-set=utf8</span><br>[<span class="hljs-string">mysqld</span>]<br><span class="hljs-comment"># 设置3306端口</span><br><span class="hljs-string">port</span> <span class="hljs-string">=</span> <span class="hljs-number">3306</span> <br><span class="hljs-comment"># 设置mysql的安装目录</span><br><span class="hljs-string">basedir</span> <span class="hljs-string">=</span> <span class="hljs-string">D:\\Program</span> <span class="hljs-string">Files\\mysql\\</span><br><span class="hljs-comment"># 设置mysql数据库的数据的存放目录</span><br><span class="hljs-string">datadir</span> <span class="hljs-string">=</span> <span class="hljs-string">D:\\Program</span> <span class="hljs-string">Files\\mysql\\data</span><br><span class="hljs-comment"># 允许最大连接数</span><br><span class="hljs-string">max_connections=20</span><br><span class="hljs-comment"># 服务端使用的字符集默认为8比特编码的latin1字符集</span><br><span class="hljs-string">character-set-server=utf8</span><br><span class="hljs-comment"># 创建新表时将使用的默认存储引擎</span><br><span class="hljs-string">default-storage-engine=INNODB</span><br><span class="hljs-comment"># 创建模式</span><br><span class="hljs-string">sql_mode</span> <span class="hljs-string">=</span> <span class="hljs-string">NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</span><br></code></pre></td></tr></table></figure><p>需要注意的是上面的安装目录都是要改为自己的内容。然后用cmd切入mysql安装目录的bin目录，记住要用管理员模式。之后运行这个命令可以初始化root的密码。</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">mysqld <span class="hljs-comment">--initialize</span><br></code></pre></td></tr></table></figure><p><img src="/img/backEndEnvironment/h-6.png" alt="配置图片"><br>最后一行的root@localhost:后面的内容就是你的密码。<br>执行mysqld –install命令，安装mysqld服务；</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">mysqld <span class="hljs-comment">--install</span><br></code></pre></td></tr></table></figure><p>执行net start mysql命令，启动mysql服务；</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dos"><span class="hljs-built_in">net</span> <span class="hljs-built_in">start</span> mysql<br></code></pre></td></tr></table></figure><p>执行mysql -u root -p命令，连接mysql数据库，输入上述随机生成的密码；</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">mysql -u root -<span class="hljs-selector-tag">p</span><br></code></pre></td></tr></table></figure><p>之后利用这个命令修改密码就可以了。</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">mysql&gt; <span class="hljs-keyword">alter</span> <span class="hljs-keyword">user</span> <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span> identified <span class="hljs-keyword">with</span> mysql_native_password <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;新密码&#x27;</span>;<br></code></pre></td></tr></table></figure><h2 id="配置tomcat"><a href="#配置tomcat" class="headerlink" title="配置tomcat"></a>配置tomcat</h2><p>首先还是去官网下载你想要的tomcat的一个版本。之后再解压缩到你想要的目录之中。<br><img src="/img/backEndEnvironment/h-7.png" alt="配置图片"><br>之后再去系统那里配置环境变量。</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs taggerscript">CATALINA_BASE：D:<span class="hljs-symbol">\P</span>rogram Files<span class="hljs-symbol">\a</span>pache-tomcat-8.5.69<br>CATALINA_HOME：D:<span class="hljs-symbol">\P</span>rogram Files<span class="hljs-symbol">\a</span>pache-tomcat-8.5.69<br>path：<span class="hljs-variable">%CATALINA_HOME%</span><span class="hljs-symbol">\l</span>ib;<span class="hljs-variable">%CATALINA_HOME%</span><span class="hljs-symbol">\b</span>in;<br></code></pre></td></tr></table></figure><p>直接在cmd下进入tomcat安装目录下的bin目录，输入启动程序即可,之后就是tomcat的一些常用的命令：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-string">startup.bat</span>      <span class="hljs-comment">#启动tomcat</span><br><span class="hljs-string">shutdown.bat</span>      <span class="hljs-comment">#关闭tomcat</span><br><span class="hljs-string">service.bat</span> <span class="hljs-string">install</span> <span class="hljs-string">tomcat</span> <span class="hljs-comment">#安装成服务 </span><br></code></pre></td></tr></table></figure><p>运行了第三条命令之后，以后在任意目录就可以用<code>net start tomcat</code>来启动tomcat了。停止命令则是<code>net stop tomcat</code>。</p><h2 id="配置Maven"><a href="#配置Maven" class="headerlink" title="配置Maven"></a>配置Maven</h2><p>最后一步还要配置一下maven，maven就相当于java的包管理工具。用来方便的管理和配置java的包。总之还是先去官网下载。<br>下载地址：<a href="http://maven.apache.org/download.cgi">http://maven.apache.org/download.cgi</a><br>解压后再去系统那里配置环境变量，但是按照普通的那么写<code>%MAVEN_HOME%\bin;</code>这个<code>mvn -v</code>还会报错，所以直接在path中写绝对路径就好了。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">MAVEN_HOME</span>：D:\Program Files\apache-maven-<span class="hljs-number">3</span>.<span class="hljs-number">8</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">path</span>：D:\Program Files\apache-maven-<span class="hljs-number">3</span>.<span class="hljs-number">8</span>.<span class="hljs-number">1</span>\bin;<br></code></pre></td></tr></table></figure><p>之后可以在cmd中输入<code>mvn -v</code>命令来查看最后安装是否完成。之后还可以配置一下阿里云的镜像，毕竟这种包管理器如果用国外的镜像的话还是比较慢的，进入根目录的conf文件夹，打开setting.xml文件。<br>在<code>&lt;mirrors&gt;</code>标签中加入如下代码即可。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">mirror</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>nexus-aliyun<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mirrorOf</span>&gt;</span>central<span class="hljs-tag">&lt;/<span class="hljs-name">mirrorOf</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>Nexus aliyun<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span> <br> <span class="hljs-tag">&lt;/<span class="hljs-name">mirror</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>常用配置</tag>
      
      <tag>Web后端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git的配置</title>
    <link href="/2021/07/29/Git%E7%9A%84%E9%85%8D%E7%BD%AE/"/>
    <url>/2021/07/29/Git%E7%9A%84%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<p>git是一个优秀的版本控制软件，自动记录每个版本的变化。方便版本的回退和团队的协作，至少我现在认识到的优点就只有这些。现在最有感受的系统还是分支系统，可以让团队高效的协作。</p><h2 id="git的配置"><a href="#git的配置" class="headerlink" title="git的配置"></a>git的配置</h2><h3 id="git安装"><a href="#git安装" class="headerlink" title="git安装"></a>git安装</h3><p>git的下载就是普通的下载，安装的时候可能有一些可需要注意的点就放一个书签来介绍。</p><p><a href="https://blog.csdn.net/Small_Yogurt/article/details/104966939">https://blog.csdn.net/Small_Yogurt/article/details/104966939</a></p><h3 id="git的SSH-Key配置"><a href="#git的SSH-Key配置" class="headerlink" title="git的SSH Key配置"></a>git的SSH Key配置</h3><p>git在配置了SSH Key之后可以不用使用密码，可以直接拉取和推送远程仓库。下面从配置流程开始介绍如可配置SSH Key。</p><p>1、首先配置git的用户名和邮箱，这个是识别上传的用户是谁的标志。其实对之后没什么用，但是必须要做，就先写在这里。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Git">git  config  --global  user.name  &quot;user name&quot;<br>git  config  --global  user.email  &quot;your email&quot;<br></code></pre></td></tr></table></figure><p>2、之后就到了真正配置SSH Key的时候，命令如下。具体的图片如下图所示。一般简单处理这个SSH Key就不设密码处理。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Git">ssh-keygen -t rsa -C &quot;your email&quot;<br></code></pre></td></tr></table></figure><p><img src="/img/git/git1.png"></p><p>3、之后如果密匙文件放在了默认的位置，利用下面的命令来查看密匙的内容。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Git">cat ~/.ssh/id_rsa.pub<br></code></pre></td></tr></table></figure><p><img src="/img/git/git2.png"></p><p>4、之后相应的远程库把对应的SSH Key输入进去。两者应该就可以不输入密码就可以进行拉取和推送了。</p><p><img src="/img/git/git3.png"></p><p>5、最后可以利用这里的命令来检验是否可以连接到远程长裤。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Git">ssh -T git@github.com<br></code></pre></td></tr></table></figure><p><img src="/img/git/git4.png"></p><h2 id="Sourcetree的安装和使用"><a href="#Sourcetree的安装和使用" class="headerlink" title="Sourcetree的安装和使用"></a>Sourcetree的安装和使用</h2><p>Sourcetree是一款git的GUI操作界面，可以让一些要输入命令行的操作最后得以使用图形界面完成，但是虽然简单直观适合初学者使用，但是复杂操作他可能就心有余而力不足。所以后续的命令行还是要继续学习深化。</p><h3 id="Sourcetree的安装"><a href="#Sourcetree的安装" class="headerlink" title="Sourcetree的安装"></a>Sourcetree的安装</h3><p>这个是安装第一个界面，因为我有科学上网的能力所以可以直接选右边注册一个账号来直接进行注册账号，然后就可以直接进行下一步了。</p><p><img src="/img/git/git5.png"></p><p>然后用按下面这个图片的配置了勾选选项。</p><p><img src="/img/git/git6.png"></p><p>这里会写出本电脑的仓库信息是自动填写的，一般来所是不用管的。</p><p><img src="/img/git/git7.png"></p><p>之后会弹出一个窗口问你配不配置SSHkey，因为我们在上一步git的配置中已经配置过了就不管他。直接一个“否”。</p><p><img src="/img/git/git8.png"></p><p>最后到这里就配置成功了，可喜可贺。</p><p><img src="/img/git/git9.png"></p><h3 id="Sourcetree的配置"><a href="#Sourcetree的配置" class="headerlink" title="Sourcetree的配置"></a>Sourcetree的配置</h3><p>在最开始使用之前，有几项内容还需要配置。首先打开配置中的选项。</p><p><img src="/img/git/git10.png"></p><p>打开后的界面如下图所示，主要有如下几个点需要注意的地方：</p><ul><li><p>默认用户信息：已经是默认填的，一般不用管。</p></li><li><p>SSH客户端配置：这里要设置一下，把SSH客户端选为OpenSSH，他会自动识别key的地址。</p></li><li><p>repo settings：这里的目录是库默认的目录，可以不填，但是填了之后会很方便。以后大家爬取库的时候可以直接从这里爬取。</p></li></ul><p><img src="/img/git/git11.png"></p><h2 id="git的使用"><a href="#git的使用" class="headerlink" title="git的使用"></a>git的使用</h2><p>这里结合git的命令行和Sourcetree的图形化界面来进行项目的拉取，推送等相关操作。</p>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>常用配置</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo的配置</title>
    <link href="/2021/07/29/Hexo%E7%9A%84%E9%85%8D%E7%BD%AE/"/>
    <url>/2021/07/29/Hexo%E7%9A%84%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。利用这个框架和github pages就可以快速搭建外网可以访问的博客。下面首先来说如何配置。</p><h2 id="github-pages的申请"><a href="#github-pages的申请" class="headerlink" title="github pages的申请"></a>github pages的申请</h2><p>github pages可以让每个用户不用配置服务器就可以创建一个互联网可以访问的页面。但是他的申请本身可能还有一些需要注意。</p><p>首先申请github pages就是申请一个github库，申请一个你的用户名.github.io为名字的库。如果名字不是这个可能会报错，实际上我也没有试过错。</p><p>接下来就是一些踩过坑的地方了，首先库的类型要设为Public，Private的github pages功能要收费的。其次要勾选Add a README file不然从本地爬库的时候会有一些问题。</p><p><img src="/img/hexo/hexo-1.png"></p><p>显示成为这样，你的github pages申请应该就大体完成了。</p><p><img src="/img/hexo/hexo-2.png"></p><h2 id="Hexo的初始化"><a href="#Hexo的初始化" class="headerlink" title="Hexo的初始化"></a>Hexo的初始化</h2><p>Hexo前面的node和npm安装就不说了，我个人已经刻在了DNA之中。然后就是利用npm现在全局环境下安装Hexo。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript">npm install -g hexo<br></code></pre></td></tr></table></figure><p>之后利用cmd或者任何终端打开一个你想要放置博客源文件的文件夹，并输入如下命令来操做。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript">hexo init <span class="hljs-comment">//初始化hexo项目，把文件加载到文件夹中</span><br>hexo g <span class="hljs-comment">// 生成编译后的文件，可以直接推送到相应的github上，之后详细介绍</span><br>hexo s <span class="hljs-comment">// 启动服务,可以本地预览你的博客</span><br><br></code></pre></td></tr></table></figure><h2 id="Hexo的主题"><a href="#Hexo的主题" class="headerlink" title="Hexo的主题"></a>Hexo的主题</h2><p>能换主题的时候没人想用默认主题，所以这里就来介绍怎么更换Hexo的主题。这里用的主题是fluid，可能和其他主题的安装方式不同，不可以直接套用。</p><p>Hexo 5.0.0 版本以上，推荐通过 npm 直接安装，进入博客目录执行命令：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript">npm install --save hexo-theme-fluid<br></code></pre></td></tr></table></figure><p>然后在博客目录下创建 <code>_config.fluid.yml</code>，将主题的 <a href="https://github.com/fluid-dev/hexo-theme-fluid/blob/master/_config.yml">_config.yml </a>内容复制过去。</p><p>如下修改 Hexo 博客目录中的 <code>_config.yml</code>：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-attr">theme:</span> <span class="hljs-string">fluid</span>  <span class="hljs-comment"># 指定主题</span><br><br><span class="hljs-attr">language:</span> <span class="hljs-string">zh-CN</span>  <span class="hljs-comment"># 指定语言，会影响主题显示的语言，按需修改</span><br></code></pre></td></tr></table></figure><p>创建成功后修改 <code>/source/about/index.md</code>。直接写关于页的内容。<br>修改后的文件示例如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript">---<br>title: about<br><span class="hljs-attr">date</span>: <span class="hljs-number">2020</span>-<span class="hljs-number">02</span>-<span class="hljs-number">23</span> <span class="hljs-number">19</span>:<span class="hljs-number">20</span>:<span class="hljs-number">33</span><br><span class="hljs-attr">layout</span>: about<br>---<br><br>这里写关于页的正文，支持 Markdown, HTML<br></code></pre></td></tr></table></figure><h2 id="Hexo的部署"><a href="#Hexo的部署" class="headerlink" title="Hexo的部署"></a>Hexo的部署</h2><p>上面说了这里会把部署写一下，安装完成主题之后就是部署上去了。首先要用npm安装一个插件。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><p>其次，配置<code>_config.yml</code>中有关deploy的部分：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repository:</span> <span class="hljs-string">git@github.com:liuxianan/liuxianan.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br></code></pre></td></tr></table></figure><p>最后载直接进行一个命令操作，你的博客就成功上传到github pages上面去了。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-string">hexo</span> <span class="hljs-string">d</span><br></code></pre></td></tr></table></figure><h2 id="Hexo的文章书写"><a href="#Hexo的文章书写" class="headerlink" title="Hexo的文章书写"></a>Hexo的文章书写</h2><p>在Hexo想要上传文章十分的简单，只要利用如下命令就可在快速生成一篇文章。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-string">hexo</span> <span class="hljs-string">new</span> <span class="hljs-string">文章题目</span><br></code></pre></td></tr></table></figure><p>Hexo这个框架就会自动在根目录下/source/_posts文件夹下自动生成一个md文件，只要在那里写markdown再保存部署，就可以看到你的文章出现在了线上的博客上了。<br>但是还有一个问题，就是图片引入的问题。在Hexo上的文章不能按照原生markdown的格式来引入，所有图片文件都要放入/source/img文件夹之下，之后文章中的路径直接写/img/图片名字.png即可。</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">![](<span class="hljs-regexp">/img/</span>图片名字)<br></code></pre></td></tr></table></figure><p>这里稍微扩展一下，如果在fluid主题下想要加入展示图的方法，在开头处按如下格式书写即可，图片格式问题和上面一致。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">文章标题</span><br><span class="hljs-attr">tags:</span> [<span class="hljs-string">Hexo</span>, <span class="hljs-string">Fluid</span>]<br><span class="hljs-attr">index_img:</span> <span class="hljs-string">/img/example.jpg</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2019-10-10 10:00:00</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><h2 id="Hexo的分类和标签"><a href="#Hexo的分类和标签" class="headerlink" title="Hexo的分类和标签"></a>Hexo的分类和标签</h2><p>虽然分类和标签是两种不同的分类方式，但是两者在Hexo中的配置方式大体相同，这里就来共同介绍一下。首先在终端输入指令。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-string">hexo</span> <span class="hljs-string">new</span> <span class="hljs-string">page</span> <span class="hljs-string">categories</span> <span class="hljs-comment">#分类</span><br><span class="hljs-string">hexo</span> <span class="hljs-string">new</span> <span class="hljs-string">page</span> <span class="hljs-string">tags</span> <span class="hljs-comment">#标签</span><br></code></pre></td></tr></table></figure><p>他会输出生成的文件所在的目录。根据他给出的目录进行下一步的配置。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-attr">INFO  Created:</span> <span class="hljs-string">~/Documents/blog/source/categories/index.md</span> <span class="hljs-comment">#分类</span><br><span class="hljs-attr">INFO  Created:</span> <span class="hljs-string">~/Documents/blog/source/tags/index.md</span> <span class="hljs-comment">#标签</span><br></code></pre></td></tr></table></figure><p>之后把两个生成的index.md改为如下的格式。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">文章分类</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2017-05-27 13:47:40</span><br><span class="hljs-attr">type:</span> <span class="hljs-string">&quot;categories&quot;</span><br><span class="hljs-meta">---</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">文章标签</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2017-05-27 13:47:40</span><br><span class="hljs-attr">type:</span> <span class="hljs-string">&quot;tags&quot;</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><p>之后不做任何操作，他也不会在分类或标签页面生成内容。分类和标签的新增可以直接在文章中添加，在文章中格式如下面所示。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">Hexo的配置</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2021-07-29 15:18:25</span><br><span class="hljs-attr">tags:</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">Web前端</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">常用配置</span><br><span class="hljs-attr">categories:</span> <br><span class="hljs-bullet">-</span> <span class="hljs-string">技术分享</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web前端</tag>
      
      <tag>常用配置</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
